@startuml
!include ./c4-plantuml//C4_Container.puml
!include ./c4-plantuml//C4_Component.puml

LAYOUT_WITH_LEGEND()

' 容器图
System_Boundary(client_boundary, "客户端应用") {
    Container(web_app, "Web应用", "Next.js", "提供Web界面")
    Container(mobile_app, "移动应用", "React Native", "提供移动端体验")
    Container(components, "共享组件库", "React", "跨平台可复用UI组件")
    Container(api_client, "API客户端", "Axios", "与后端通信")
}

System_Boundary(api_boundary, "API服务") {
    Container(api, "API网关", "Express.js", "请求路由和负载均衡")
    Container(auth_service, "认证服务", "TypeScript", "处理用户认证和授权")
    Container(post_service, "内容服务", "TypeScript", "处理帖子/故事/评论")
    Container(interaction_service, "互动服务", "TypeScript", "处理点赞/收藏/分享")
    Container(relationship_service, "关系服务", "TypeScript", "处理关注/粉丝/好友")
    Container(message_service, "消息服务", "TypeScript", "处理私信/聊天")
    Container(notification_service, "通知服务", "TypeScript", "处理系统通知")
    Container(models, "数据模型", "Mongoose", "数据持久化和访问")
}

System_Boundary(external_boundary, "外部服务") {
    ContainerDb(postgres, "PostgreSQL", "数据库", "存储用户信息和关系数据")
    ContainerDb(cassandra, "Cassandra", "数据库", "存储消息和日志数据")
    ContainerDb(redis, "Redis", "缓存", "存储会话和实时数据")
    System_Ext(cdn, "CDN", "内容分发网络", "存储和分发媒体内容")
    System_Ext(push_service, "推送服务", "处理移动推送通知")
    System_Ext(search_service, "搜索服务", "Elasticsearch", "提供内容搜索功能")
    System_Ext(analytics_service, "分析服务", "处理用户行为分析")
    System_Ext(docker, "Docker", "容器平台", "提供容器化运行环境")
    System_Ext(k8s, "Kubernetes", "容器编排", "管理容器集群")
}

' 客户端内部关系
Rel(web_app, components, "使用", "TypeScript")
Rel(mobile_app, components, "使用", "TypeScript")
Rel(web_app, api_client, "使用", "TypeScript")
Rel(mobile_app, api_client, "使用", "TypeScript")

' API网关与微服务关系
Rel(api_client, api, "调用", "HTTPS")
Rel(api, auth_service, "调用", "gRPC")
Rel(api, post_service, "调用", "gRPC")
Rel(api, interaction_service, "调用", "gRPC") 
Rel(api, relationship_service, "调用", "gRPC")
Rel(api, message_service, "调用", "gRPC")
Rel(api, notification_service, "调用", "gRPC")

' 服务与数据层关系
Rel(auth_service, models, "读写", "TypeScript")
Rel(post_service, models, "读写", "TypeScript")
Rel(interaction_service, models, "读写", "TypeScript")
Rel(relationship_service, models, "读写", "TypeScript")
Rel(message_service, models, "读写", "TypeScript")
Rel(notification_service, models, "读写", "TypeScript")

' 外部服务关系
Rel(models, postgres, "持久化用户数据", "PostgreSQL")
Rel(models, cassandra, "持久化消息数据", "Cassandra")
Rel(models, redis, "缓存数据", "Redis")
Rel(post_service, cdn, "上传/获取", "HTTPS")
Rel(notification_service, push_service, "发送", "HTTPS")
Rel(post_service, search_service, "索引", "HTTPS")
Rel(api, analytics_service, "上报", "HTTPS")
Rel(api, docker, "部署", "Docker API")
Rel(docker, k8s, "编排", "Kubernetes API")

@enduml
