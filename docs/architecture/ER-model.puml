@startuml
!include ./c4-plantuml/C4_Context.puml
!include ./c4-plantuml//C4_Container.puml
!include ./c4-plantuml//C4_Component.puml

LAYOUT_WITH_LEGEND()

' 数据库模型图
Container_Boundary(database, "社交媒体数据库模型") {
    Component(user, "User", "Mongoose Schema", "用户信息") {
        Component(user_fields, "字段", "Schema", "username, email, password, fullName, bio, profilePic, website, gender, phone, isPrivate, isVerified")
    }

    Component(post, "Post", "Mongoose Schema", "帖子信息") {
        Component(post_fields, "字段", "Schema", "userId, caption, location, images[], likesCount, commentsCount, createdAt")
    }

    Component(story, "Story", "Mongoose Schema", "故事信息") {
        Component(story_fields, "字段", "Schema", "userId, mediaUrl, expiresAt, viewers[]")
    }

    Component(comment, "Comment", "Mongoose Schema", "评论信息") {
        Component(comment_fields, "字段", "Schema", "userId, postId, content, createdAt")
    }

    Component(like, "Like", "Mongoose Schema", "点赞信息") {
        Component(like_fields, "字段", "Schema", "userId, postId, createdAt")
    }

    Component(message, "Message", "Mongoose Schema", "私信信息") {
        Component(message_fields, "字段", "Schema", "senderId, receiverId, content, mediaUrl, isRead, createdAt")
    }

    Component(notification, "Notification", "Mongoose Schema", "通知信息") {
        Component(notification_fields, "字段", "Schema", "recipientId, senderId, type, postId, commentId, isRead, createdAt")
    }

    Component(follow, "Follow", "Mongoose Schema", "关注关系") {
        Component(follow_fields, "字段", "Schema", "followerId, followingId, createdAt")
    }
}

' 实体关系
Rel(user, post, "1:N", "创建")
Rel(user, story, "1:N", "创建")
Rel(user, comment, "1:N", "发表")
Rel(user, like, "1:N", "点赞")
Rel(user, message, "1:N", "发送/接收")
Rel(user, notification, "1:N", "接收")
Rel(user, follow, "N:M", "关注", "通过followerId和followingId")

Rel(post, comment, "1:N", "拥有")
Rel(post, like, "1:N", "拥有")
Rel(post, notification, "1:N", "触发")

@enduml
